================================================================
 ABOUT
================================================================

MyLua is a UDF (User-Defined Function) of MySQL.
It makes possible to fast query on SQL hate access pattern.



================================================================
 INSTALL
================================================================

MyLua requires Lua, lua-cjson, and MySQL source code.

* Lua

 requires readline and ncurses.
 tested version is 5.1.4.

  $ cd mylua
  $ wget http://www.lua.org/ftp/lua-5.1.4.tar.gz
  $ tar zxvf lua-5.1.4.tar.gz
  $ mv lua-5.1.4 lua
  $ cd lua
  $ make linux
  $ make local


* Lua CJSON

 URL: http://www.kyne.com.au/~mark/software/lua-cjson.php
 tested version is 1.0.4.

  $ cd mylua
  $ wget http://www.kyne.com.au/~mark/software/download/lua-cjson-1.0.4.tar.gz
  $ tar zxvf lua-cjson-1.0.4.tar.gz
  $ mv lua-cjson-1.0.4 lua-cjson
  $ cd lua-cjson
  $ env LUA_INCLUDE_DIR=../lua/include LUA_LIB_DIR=../lua/lib make
  (if failed, then do `make clean` before retry.)

 dynamic link library (cjson.so) is generated.
 but MyLua requires static link library (cjson.a).

  $ ar rv cjson.a lua_cjson.o strbuf.o

 (REF: http://www.hi-ho.ne.jp/babaq/linux/libtips.html (japanese))


* MySQL

 requires readline and ncurses.
 tested version is 5.1.41.

  $ cd mylua
  $ wget http://downloads.mysql.com/archives/mysql-5.1/mysql-5.1.41.tar.gz
  $ tar zxvf mysql-5.1.41.tar.gz
  $ mv mysql-5.1.41 mysql
  $ cd mysql
  $ cp include/config.h include/my_config.h
  $ ./configure


* result

 + mylua/
  + lua/
  + lua-cjson/
  + mysql/
  ... and etc


* MyLua

  $ cd mylua
  $ g++ -O2 -I ./lua/include/ -L /usr/lib -lm -ldl -Wall -nostartfiles -fPIC -I ./mysql/include -I ./mysql/sql -I ./mysql/regex -shared -o mylua.so src/mylua.cc lua/lib/liblua.a lua-cjson/cjson.a -l lua5.1
  $ sudo cp mylua.so /usr/lib/mysql/plugin/
  $ mysql -u root -e "create function mylua returns string soname 'mylua.so'" -p



================================================================
 SAMPLE
================================================================

# prepare sample table

$ mysql -u localuser localuser -e '
  CREATE TABLE timeline (
    user_id   int unsigned NOT NULL,
    status_id int unsigned NOT NULL,
    PRIMARY KEY (status_id),
    KEY user_id (user_id, status_id)
  ) ENGINE=InnoDB;

  INSERT timeline (user_id, status_id)
  VALUES (1,11),(1,12),(2,21),(3,31),(3,32),(3,33),(5,51);
'

# call mylua()
# arguments   : mylua(<lua code>, <json argument>)
# return value: json string.

$ mysql -u localuser -e '
  SELECT mylua('\''
    local t = {};
    mylua.init_table("localuser", "timeline", "user_id", "user_id", "status_id");
    mylua.index_read_map(mylua.HA_READ_KEY_OR_NEXT, mylua.arg.uid, mylua.arg.sid);
    table.insert(t, { mylua.val_int("user_id"), mylua.val_int("status_id") });
    mylua.index_next();
    table.insert(t, { mylua.val_int("user_id"), mylua.val_int("status_id") });
    return t;
  '\'', '\''{"uid":3,"sid":32}'\'');
' -p

#=> [[3,32],[3,33]]



================================================================
 LICENSE
================================================================

Copyright (c) 2011, Atsumu Tanaka <atsumu.dev@gmail.com>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

   * Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.

   * Redistributions in binary form must reproduce the above copyright notice,
     this list of conditions and the following disclaimer in the documentation
     and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

